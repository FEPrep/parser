{
    "0": [],
    "1": [],
    "2": [
        {
            "rect": {
                "x0": 54.0,
                "y0": 297.1397705078125,
                "x1": 284.451171875,
                "y1": 718.5635375976562
            },
            "sub_areas": [
                {
                    "kind": "free_response",
                    "code_textarea": {
                        "x0": 54.0,
                        "y0": 297.1397705078125,
                        "x1": 284.451171875,
                        "y1": 718.5635375976562
                    },
                    "text": "{ \n}"
                }
            ],
            "text": "void destroy_list(node *head) { \n}"
        }
    ],
    "3": [
        {
            "rect": {
                "x0": 54.0,
                "y0": 132.84811401367188,
                "x1": 510.07696533203125,
                "y1": 484.0209045410156
            },
            "sub_areas": [],
            "text": "void string_shenanigans(char *str) \n{ \n  int i, len = strlen(str); \n  char *new_string = malloc(sizeof(char) * (len + 1)); \n  Stack s1, s2; \n  init(&s1); // initializes stack s1 to be empty \n  init(&s2); // initializes stack s2 to be empty \n  for (i = 0; i < len; i++) { \n     push(&s1, str[i]);  // this pushes onto stack s1 \n     push(&s2, str[i]);  // this pushes onto stack s2 \n  } \n  for (i = 0; i < len; i++) { \n     if (i % 2 == 0) { \n        // Note: pop() returns the character being removed from the stack. \n        if (!isEmpty(&s1)) \n           new_string[i] = pop(&s1); \n        if (!isEmpty(&s1)) \n           push(&s2, pop(&s1)); \n     } \n     else { \n        pop(&s2); \n        new_string[i] = pop(&s2); \n     } \n  } \n  new_string[len] = '\\0'; \n  printf(\"%s\\n\", new_string); \n  free(new_string); \n}"
        }
    ],
    "4": [],
    "5": [],
    "6": [
        {
            "rect": {
                "x0": 90.02400207519531,
                "y0": 160.54974365234375,
                "x1": 334.8711853027344,
                "y1": 255.77349853515625
            },
            "sub_areas": [],
            "text": "int hash(int key, int table_size) \n{ \n \nint a = (key % 100) / 10; \n \nint b = key % 10; \n \n \nreturn (a + b) % table_size; \n}"
        }
    ],
    "7": [
        {
            "rect": {
                "x0": 54.0,
                "y0": 370.2989807128906,
                "x1": 430.3251037597656,
                "y1": 719.355224609375
            },
            "sub_areas": [
                {
                    "kind": "free_response",
                    "code_textarea": {
                        "x0": 54.0,
                        "y0": 370.2989807128906,
                        "x1": 430.3251037597656,
                        "y1": 719.355224609375
                    },
                    "text": "{ \n}"
                }
            ],
            "text": "int countStringsWithLetter(TrieNode *root, char alpha) { \n}"
        }
    ],
    "8": [],
    "9": [],
    "10": [],
    "11": [],
    "12": [],
    "13": [
        {
            "rect": {
                "x0": 54.0,
                "y0": 162.34979248046875,
                "x1": 342.0711669921875,
                "y1": 434.353515625
            },
            "sub_areas": [
                {
                    "kind": "free_response",
                    "code_textarea": {
                        "x0": 54.0,
                        "y0": 162.34979248046875,
                        "x1": 342.0711669921875,
                        "y1": 434.353515625
                    },
                    "text": "{ \n}"
                }
            ],
            "text": "int weightedSum(int numbers[], int n) { \n}"
        }
    ],
    "14": [],
    "15": [
        {
            "rect": {
                "x0": 54.0,
                "y0": 316.2197570800781,
                "x1": 241.2511749267578,
                "y1": 506.4735107421875
            },
            "sub_areas": [
                {
                    "kind": "free_response",
                    "code_textarea": {
                        "x0": 54.0,
                        "y0": 316.2197570800781,
                        "x1": 241.2511749267578,
                        "y1": 506.4735107421875
                    },
                    "text": "{ \n}"
                }
            ],
            "text": "int lowestOneBit(int n) { \n}"
        },
        {
            "rect": {
                "x0": 54.0,
                "y0": 520.1197509765625,
                "x1": 248.451171875,
                "y1": 724.08349609375
            },
            "sub_areas": [
                {
                    "kind": "free_response",
                    "code_textarea": {
                        "x0": 54.0,
                        "y0": 520.1197509765625,
                        "x1": 248.451171875,
                        "y1": 724.08349609375
                    },
                    "text": "{ \n}"
                }
            ],
            "text": "int highestOnebit(int n) { \n}"
        }
    ]
}